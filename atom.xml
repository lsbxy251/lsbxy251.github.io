<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ygydpj.learning.ac.cn</id>
    <title>豫工院单片机</title>
    <updated>2019-09-06T16:11:45.426Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ygydpj.learning.ac.cn"/>
    <link rel="self" href="https://ygydpj.learning.ac.cn/atom.xml"/>
    <subtitle>豫工院单片机，温故而知新！</subtitle>
    <logo>https://ygydpj.learning.ac.cn/images/avatar.png</logo>
    <icon>https://ygydpj.learning.ac.cn/favicon.ico</icon>
    <rights>All rights reserved 2019, 豫工院单片机</rights>
    <entry>
        <title type="html"><![CDATA[字节地址和位地址之间的相互换算]]></title>
        <id>https://ygydpj.learning.ac.cn/post/zi-jie-di-zhi-he-wei-di-zhi-zhi-jian-de-xiang-hu-huan-suan</id>
        <link href="https://ygydpj.learning.ac.cn/post/zi-jie-di-zhi-he-wei-di-zhi-zhi-jian-de-xiang-hu-huan-suan">
        </link>
        <updated>2019-09-06T15:22:09.000Z</updated>
        <summary type="html"><![CDATA[<ol>
<li>字节地址和位地址之间的换算主要涉及到表1（教材P26表2-5）和表2（教材P26表2-6）。</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<ol>
<li>字节地址和位地址之间的换算主要涉及到表1（教材P26表2-5）和表2（教材P26表2-6）。</li>
</ol>
<!-- more -->
<p>表1如下：<br>
<img src="https://ygydpj.learning.ac.cn/post-images/1567783852620.jpg" alt=""><br>
表2如下：<br>
<img src="https://ygydpj.learning.ac.cn/post-images/1567783909447.jpg" alt=""><br>
2. 对于表1来说：<br>
 （1） 所有的字节地址的高一位都是2；<br>
 （2） 位地址只与字节地址的低一位有关，而与高一位“2”无关；<br>
 （3） 已知字节地址求位地址的方法是：位地址的高一位是字节地址的低一位除以2的商，低一位则与字节地址的低一位除以2的余数有关：<br>
      1） 当余数为0时，位地址的低一位的值是0~7,第n位的位地址的低一位的值是n，n=0...7；<br>
     	2）当余数为1时，位地址的低一位的值是8~F,第n位的位地址的低一位的值是8+n，n=0...7；<br>
 （4）已知位地址求取字节地址的方法是：<br>
      1）字节地址的高一位直接是“2”；<br>
      2）设位地址的高一位是x，如果其低一位为0~7，则字节地址的低一位是2x，否则，字节地址的低一位是2x+1；<br>
3. 对于表2来说:<br>
 （1） 假设字节地址是xx，则位地址的范围为：xx~xx+7,第n位的地址是xx+n，n=0...7;<br>
 （2）  如果位地址的低一位小于8，则将位地址的低一位变为0即是其对应的字节地址；<br>
 （3）  如果位地址的低一位不小于8，则将位地址的低一位变为8即是其对应的字节地址；<br>
4. 采用表1或表2对应的方法取决于字节地址或位地址是否大于7FH；大于7FH，采用表2对应的方法，否则采用表1对应的方法；<br>
5. 换算时，所给的地址是字节地址还是位地址是已知的，不会给一个地址，让我们判断其是字节地址还是位地址；</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[通用工作寄存器组的选择与使用]]></title>
        <id>https://ygydpj.learning.ac.cn/post/tong-yong-gong-zuo-ji-cun-qi-zu-de-xuan-ze-yu-shi-yong</id>
        <link href="https://ygydpj.learning.ac.cn/post/tong-yong-gong-zuo-ji-cun-qi-zu-de-xuan-ze-yu-shi-yong">
        </link>
        <updated>2019-09-06T13:43:05.000Z</updated>
        <summary type="html"><![CDATA[<ol>
<li>在AT89S51单片机的片内数据存储器中，地址为00H~1FH的32个单元是四组通用工作寄存器区，每个区包含8B的工作寄存器，编号为R7~R0；</li>
</ol>
]]></summary>
        <content type="html"><![CDATA[<ol>
<li>在AT89S51单片机的片内数据存储器中，地址为00H~1FH的32个单元是四组通用工作寄存器区，每个区包含8B的工作寄存器，编号为R7~R0；</li>
</ol>
<!-- more -->
<ol start="2">
<li>在<strong>同一时刻</strong>，只有一组工作寄存器区作为当前的工作寄存器区被使用；</li>
<li>无论当前使用的是哪一组工作寄存器区，其<strong>编号都是R7~R0</strong>，各个编号对应的字节地址<em>取决于</em>当前的工作寄存器区的<strong>区号</strong>；</li>
<li>当前工作寄存器组的区号由程序状态字寄存器PSW中的RS1、RS0决定，用户可通过改变这两位值来切换选择当前的工作寄存器组；</li>
<li>RS1、RS0、当前的工作寄存器区的区号、当前的工作寄存器区的地址范围，各编号对应的字节地址的地址关系如下表所示：<br>
<img src="https://ygydpj.learning.ac.cn/post-images/1567781564447.jpg" alt=""></li>
<li>RS1值可能是0或1，RS0的值也可能是0或1，将RS1作为高位，RS0作为低位，则可以组合成四个二进制数00、01、10和11，将其转换成十进制数，即为当前的工作寄存器区的区号；</li>
<li>假设当前的工作寄存器区的区号为x，则其字节地址的范围为8x~8x+7;</li>
<li>假设当前的工作寄存器区的区号为x，则Rn的字节地址为：8x+n，n=0...7;</li>
</ol>
]]></content>
    </entry>
</feed>